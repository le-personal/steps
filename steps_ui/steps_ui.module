<?php
/**
 * @file steps_ui.module
 * TODO: Enter file description here.
 */

/**
 * Implementation of hook_permissions
 */

 
/**
 * Implementation of hook_menu().
 */
function steps_ui_menu() {
  // Main page 
  $items['admin/structure/steps'] = array(
    'title' => 'Steps',
    'description' => 'Administer the steps and wizards',
    'page callback' => 'steps_ui_wizard_page',
    'access arguments' => array('administer steps'),
    'weight' => 0,
    'type' => MENU_NORMAL_ITEM,
    'file path' => drupal_get_path("module", "steps_ui"), 
    'file' => 'steps_ui.admin.inc'
  );
  
  // Admin wizard page
  $items['admin/structure/steps/wizard'] = array(
    'title' => 'Administer Wizards',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  
  // Create new wizard page
  $items['admin/structure/steps/wizard/new'] = array(
    'title' => 'New wizard',
    'description' => 'Create wizard',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('steps_ui_wizard_form'),
    'access arguments' => array('administer steps'),
    'weight' => 0,
    'type' => MENU_LOCAL_ACTION,
    'file path' => drupal_get_path("module", "steps_ui"), 
    'file' => 'steps_ui.admin.inc'
  );
  
  // Edit wizard page
  $items['admin/structure/steps/wizard/%/edit'] = array(
    'title' => 'Edit wizard',
    'description' => 'Edit wizard',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('steps_ui_wizard_form', 4),
    'access arguments' => array('administer steps'),
    'weight' => 0,
    'type' => MENU_CALLBACK,
    'file path' => drupal_get_path("module", "steps_ui"), 
    'file' => 'steps_ui.admin.inc'
  );
  
  // Delete wizard page
  $items['admin/structure/steps/wizard/%/delete'] = array(
    'title' => 'Delete wizard',
    'description' => 'Delete wizard',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('steps_ui_wizard_delete', 4),
    'access arguments' => array('administer steps'),
    'weight' => 0,
    'type' => MENU_CALLBACK,
    'file path' => drupal_get_path("module", "steps_ui"), 
    'file' => 'steps_ui.admin.inc'
  );
  
  // Steps page
  $items['admin/structure/steps/wizard/%/steps'] = array(
    'title' => 'Steps',
    'description' => 'Administer the steps for a wizard',
    'page callback' => 'steps_ui_steps_page',
    'page arguments' => array(4),
    'access arguments' => array('administer steps'),
    'weight' => 0,
    'file path' => drupal_get_path("module", "steps_ui"), 
    'file' => 'steps_ui.admin.inc'
  );
  
  // Create step page
  $items['admin/structure/steps/wizard/%/steps/new'] = array(
    'title' => 'New step',
    'description' => 'Create step',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('steps_ui_step_form', 4),
    'access arguments' => array('administer steps'),
    'weight' => 0,
    'type' => MENU_LOCAL_ACTION,
    'file path' => drupal_get_path("module", "steps_ui"), 
    'file' => 'steps_ui.admin.inc'
  );
  
  // View step
  $items['admin/structure/steps/wizard/%/steps/%/view'] = array(
    'title' => 'View step',
    'description' => 'View step',
    'page callback' => 'steps_ui_step_view',
    'page arguments' => array(4, 6),
    'access arguments' => array('administer steps'),
    'weight' => 0,
    'type' => MENU_CALLBACK,
    'file path' => drupal_get_path("module", "steps_ui"), 
    'file' => 'steps_ui.admin.inc'
  );
  
  // Edit step page
  $items['admin/structure/steps/wizard/%/steps/%/edit'] = array(
    'title' => 'Edit step',
    'description' => 'Edit step',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('steps_ui_step_form', 4, 6),
    'access arguments' => array('administer steps'),
    'weight' => 0,
    'type' => MENU_CALLBACK,
    'file path' => drupal_get_path("module", "steps_ui"), 
    'file' => 'steps_ui.admin.inc'
  );
  
  // Delete step page
  $items['admin/structure/steps/wizard/%/steps/%/delete'] = array(
    'title' => 'Delete step',
    'description' => 'Delete step',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('steps_ui_step_delete_form', 4, 6),
    'access arguments' => array('administer steps'),
    'weight' => 0,
    'type' => MENU_CALLBACK,
    'file path' => drupal_get_path("module", "steps_ui"), 
    'file' => 'steps_ui.admin.inc'
  );
  
  // Create a new form for edits
  $wizards = steps_get_wizards(TRUE);
  foreach($wizards as $wizard) {
    $items["admin/steps/" . $wizard->wizard] = array(
      'title' => $wizard->title,
      'page callback' => 'drupal_get_form',
      'page arguments' => array("steps_ui_step_form", $wizard->wizard),
      'access arguments' => array("configure form " . $wizard->wizard),
      'type' => MENU_NORMAL_ITEM,
    );  
  }
  
  return $items;
}

function steps_ui_step_form($form, $args) {
  global $user;
  $form = array();
  
  $steps = steps_get_steps($args['build_info']['args'][0]);
  foreach($steps as $step) {
    $stepkey = $step->step;
    
    switch($step->component_type) {
      case "radios" :
      case "select" :
        $form[$stepkey] = array(
          '#type' => $step->component_type,
          '#title' => isset($step->description) ? $step->description : $step->title,
          // '#description' => $step->description,
          '#default_value' => $step->component_default,
          '#required' => TRUE,
        );
        
        if(isset($step->component_options)) {
          $options_arr = steps_pipelined_process_options($step->component_options);
          $form[$stepkey]['#options'] = $options_arr;
        }
        
        break;
        
      case "textfield":
        $form[$stepkey] = array(
          '#type' => "textfield",
          '#title' => isset($step->description) ? $step->description : $step->title,
          // '#description' => $step->description,
          '#default_value' => $step->component_default,
          '#required' => TRUE,
        );
  
        break;
        
      case "textarea":
        $form[$stepkey] = array(
          '#type' => "textarea",
          '#title' => isset($step->description) ? $step->description : $step->title,
          // '#description' => $step->description,
          '#default_value' => $step->component_default,
          '#required' => TRUE,
        );
        break;
        
      case "checkboxes":
        $form[$stepkey] = array(
          '#type' => "checkboxes",
          '#title' => isset($step->description) ? $step->description : $step->title,
          // '#description' => $step->description,
          '#required' => TRUE,
        );
        
        if(isset($step->component_options)) {
          $options_arr = steps_pipelined_process_options($step->component_options);
          $form[$stepkey]['#options'] = $options_arr;
        }
        break;
        
      
  
      case "form":
        // Print the form here
        // $form = array_merge($form, drupal_get_form($step["component_callback"], $step));
        // drupal_alter("steps_form_" . $step["component_callback"], $form);
        $function = $step->component_callback;
        if(function_exists($function)) {
          $form[] = $function($form);
        }
        
        break;
    }
  }
  
   
  $form['actions']['#type'] = 'actions';
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t("Next"),
  );
  
  $form['#submit'][] = "steps_ui_step_form_submit";
  
  return $form;
}

function steps_ui_step_form_submit($form, &$form_state) {
  $values = $form_state['values'];
  
}
